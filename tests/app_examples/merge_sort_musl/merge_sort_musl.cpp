#include<iostream>
using namespace std;
void swapping(int &a, int &b) {     //swap the content of a and b
   int temp;
   temp = a;
   a = b;
   b = temp;
}
void display(int *array, int size) {
   for(int i = 0; i<size; i++)
      cout << array[i] << " ";
   cout << endl;
}
void merge(int *array, int l, int m, int r) {
   int i, j, k, nl, nr;
   //size of left and right sub-arrays
   nl = m-l+1; nr = r-m;
   int larr[nl], rarr[nr];
   //fill left and right sub-arrays
   for(i = 0; i<nl; i++)
      larr[i] = array[l+i];
   for(j = 0; j<nr; j++)
      rarr[j] = array[m+1+j];
   i = 0; j = 0; k = l;
   //marge temp arrays to real array
   while(i < nl && j<nr) {
      if(larr[i] <= rarr[j]) {
         array[k] = larr[i];
         i++;
      }else{
         array[k] = rarr[j];
         j++;
      }
      k++;
   }
   while(i<nl) {       //extra element in left array
      array[k] = larr[i];
      i++; k++;
   }
   while(j<nr) {     //extra element in right array
      array[k] = rarr[j];
      j++; k++;
   }
}
void mergeSort(int *array, int l, int r) {
   int m;
   if(l < r) {
      int m = l+(r-l)/2;
      // Sort first and second arrays
      mergeSort(array, l, m);
      mergeSort(array, m+1, r);
      merge(array, l, m, r);
   }
}

int main(int argc, char const *argv[])
{
    int arr[512] = {581, 549, 651, 738, 72, 363, 980, 345, 204, 826, 318, 623, 323, 172, 771, 657, 28, 950, 182, 203, 824, 151, 633, 45, 76, 656, 648, 348, 420, 663, 857, 714, 897, 424, 473, 488, 611, 187, 849, 62, 577, 288, 371, 924, 298, 427, 686, 937, 80, 430, 768, 562, 48, 831, 953, 210, 42, 443, 731, 745, 17, 992, 452, 854, 929, 163, 759, 721, 597, 815, 370, 272, 668, 839, 896, 799, 268, 17, 430, 255, 830, 861, 719, 180, 237, 381, 803, 958, 537, 687, 468, 231, 983, 367, 352, 294, 508, 634, 16, 445, 341, 108, 359, 563, 72, 41, 79, 892, 725, 325, 206, 82, 621, 645, 662, 208, 611, 267, 909, 540, 972, 804, 884, 695, 509, 577, 564, 761, 882, 631, 405, 206, 152, 62, 78, 107, 478, 177, 545, 126, 440, 537, 453, 853, 248, 194, 217, 550, 912, 685, 600, 181, 310, 402, 870, 202, 712, 668, 94, 605, 621, 116, 649, 696, 397, 655, 14, 281, 397, 693, 586, 688, 651, 917, 39, 35, 558, 374, 512, 867, 806, 962, 353, 561, 72, 960, 471, 713, 43, 527, 643, 324, 237, 298, 634, 736, 718, 170, 643, 525, 350, 254, 706, 986, 533, 693, 535, 182, 49, 899, 138, 906, 342, 252, 418, 405, 81, 34, 421, 568, 585, 727, 228, 792, 616, 673, 588, 466, 206, 638, 132, 783, 875, 606, 290, 11, 476, 781, 991, 428, 132, 516, 654, 72, 275, 466, 927, 562, 274, 852, 96, 220, 430, 196, 233, 763, 539, 131, 456, 891, 48, 311, 924, 666, 239, 839, 981, 5, 821, 624, 565, 328, 750, 425, 995, 140, 688, 287, 621, 13, 332, 624, 684, 531, 337, 924, 966, 755, 487, 544, 14, 350, 762, 408, 551, 967, 611, 470, 379, 180, 689, 464, 911, 92, 877, 499, 24, 524, 681, 571, 124, 969, 576, 393, 767, 790, 878, 516, 597, 921, 332, 378, 4, 364, 493, 450, 210, 720, 699, 720, 444, 0, 94, 755, 787, 139, 361, 250, 624, 894, 374, 469, 31, 729, 438, 697, 100, 678, 418, 249, 472, 96, 615, 860, 770, 716, 104, 408, 258, 940, 63, 62, 273, 313, 698, 135, 278, 360, 555, 68, 898, 885, 252, 816, 781, 625, 260, 147, 373, 26, 140, 458, 211, 897, 488, 841, 619, 409, 170, 574, 336, 348, 278, 918, 441, 398, 888, 520, 471, 573, 458, 425, 16, 970, 159, 887, 165, 673, 391, 59, 556, 658, 64, 134, 861, 881, 404, 999, 137, 731, 447, 831, 841, 267, 131, 58, 726, 70, 756, 341, 557, 37, 724, 660, 661, 17, 204, 307, 819, 362, 63, 68, 629, 704, 864, 806, 688, 4, 783, 81, 569, 756, 694, 215, 719, 949, 541, 733, 915, 556, 906, 924, 172, 964, 529, 278, 517, 800, 805, 815, 239, 491, 694, 173, 885, 147, 166, 360, 80, 731, 211, 418, 949, 328, 299, 212, 837, 441, 366, 498, 321, 663, 115, 845, 699, 82, 968, 475, 348, 713, 726, 604, 53, 484, 775, 714, 968, 748, 142, 257, 890, 468};
    cout << "Array before Sorting: ";
    display(arr, 512);
    cout << endl;
    mergeSort(arr, 0, 512-1);     //(n-1) for last index
    cout << "Array after Sorting: ";
    display(arr, 512);
    cout << endl;
    return 0;
}

